name: Docker, Azure web apps

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  push:
    name: Build and push
    runs-on: ubuntu-latest
    outputs:
      docker_image_tag: ${{  steps.docker_image.outputs.tag  }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Get commit sha
        shell: bash
        run: echo "SHORT_SHA=$(echo -n ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo -n ${GITHUB_REF#refs/heads/} | tr -c '[:alnum:]' '-')" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo -n ${GITHUB_HEAD_REF} | tr -c '[:alnum:]' '-')" >> $GITHUB_ENV

      - name: Get Repository name
        shell: bash
        run: echo "REPOSITORY_NAME=$(echo -n ${{ github.repository }} | awk '{print tolower($0)}')" >> $GITHUB_ENV

      - name: Set docker image with sha tag
        shell: bash
        run: echo "DOCKER_SHA=ghcr.io/${{ env.REPOSITORY_NAME }}:${{ env.BRANCH_NAME }}-${{ env.SHORT_SHA }}" >> $GITHUB_ENV

      - name: Set docker image with latest tag
        shell: bash
        run: echo "DOCKER_LATEST=ghcr.io/${{ env.REPOSITORY_NAME }}:latest" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_SHA }},${{ env.DOCKER_LATEST }}

      - name: Set image as output
        id: docker_image
        shell: bash
        run: echo "::set-output name=tag::${{ env.DOCKER_SHA }}"
  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy azure web apps
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true

    runs-on: ubuntu-latest
    needs: [push]
    strategy:
      max-parallel: 1
      matrix:
        env: [dev, test]
    environment: ${{ matrix.env }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ matrix.env }}-bildetema-drupal"
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
          images: "ghcr.io/${{ needs.push.outputs.docker_image_tag }}"
  setup:
    if: github.ref == 'refs/heads/main'
    name: Setup drupal
    runs-on: ubuntu-latest
    needs: [push, deploy]
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    strategy:
      matrix:
        env: [dev, test]
        title: [Norsk]
    environment: ${{ matrix.env }}
    env:
      DRUPAL_URL: ${{ secrets.DRUPAL_URL }}
      TITLE: ${{matrix.title}}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Install root dependencies
        uses: bahmutov/npm-install@v1

      - name: Setup
        run: npm run setup-drupal
